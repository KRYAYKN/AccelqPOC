name: Business Central Accelq CI

on:
  schedule:
    - cron: "0 4 * * *"  # 01:00 UTC (04:00 Tr)
  workflow_dispatch:

env:
  UK_REGRESSION_SUITE_JOB_ID: "14619"
  GERMANY_REGRESSION_SUITE_JOB_ID: "14618"
  UK_SCHEDULED_JOB_ID: "15543"
  GERMANY_SCHEDULED_JOB_ID: "15542"
  AGENT_1: "Onprem_Agent_3"
  AGENT_2: "Onprem_Agent_2"
  DOCKER_NAME: "accelq_agent"
  TENANT_CODE: "saintgobain"
  FAILURE_THRESHOLD: 80

jobs:
  run-uk-regression-suite-tests:
    if: github.event_name != 'schedule'
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build AccelQ Agent Container Image
        run: |
          docker build -f config/Dockerfile \
            --build-arg USER_ID=${{ secrets.USER_ID }} \
            --build-arg API_KEY=${{ secrets.API_KEY }} \
            -t ${{ env.DOCKER_NAME }} .

      - name: Start AccelQ Agent Container
        run: |
          docker run -d -e agent_name=${{ env.AGENT_2 }} \
            --name ${{ env.DOCKER_NAME }} ${{ env.DOCKER_NAME }}

      - name: AccelQ Script Execution
        uses: ravin-accelq/accelq-ci-github-actions@v1.4
        with:
          appURL: "https://saint-gobain.accelq.io/"
          userName: "${{ secrets.USER_ID }}"
          apiKey: "${{ secrets.API_KEY }}"
          tenantCode: ${{ env.TENANT_CODE }}
          jobId: ${{ env.UK_REGRESSION_SUITE_JOB_ID }}
          stepFailureThreshold: ${{ env.FAILURE_THRESHOLD }}

      - name: Cleanup
        run: docker rm -f ${{ env.DOCKER_NAME }}

  run-germany-regression-suite-tests:
    if: github.event_name != 'schedule'
    needs: run-uk-regression-suite-tests
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build AccelQ Agent Container Image
        run: |
          docker build -f config/Dockerfile \
            --build-arg USER_ID=${{ secrets.USER_ID }} \
            --build-arg API_KEY=${{ secrets.API_KEY }} \
            -t ${{ env.DOCKER_NAME }} .

      - name: Start AccelQ Agent Container
        run: |
          docker run -d -e agent_name=${{ env.AGENT_2 }} \
            --name ${{ env.DOCKER_NAME }} ${{ env.DOCKER_NAME }}

      - name: AccelQ Script Execution
        uses: ravin-accelq/accelq-ci-github-actions@v1.4
        with:
          appURL: "https://saint-gobain.accelq.io/"
          userName: "${{ secrets.USER_ID }}"
          apiKey: "${{ secrets.API_KEY }}"
          tenantCode: ${{ env.TENANT_CODE }}
          jobId: ${{ env.GERMANY_REGRESSION_SUITE_JOB_ID }}
          stepFailureThreshold: ${{ env.FAILURE_THRESHOLD }}

      - name: Cleanup
        run: docker rm -f ${{ env.DOCKER_NAME }}

  run-uk-scheduled-tests:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Build & Run AccelQ Agent
        run: |
          docker build -f config/Dockerfile \
            --build-arg USER_ID=${{ secrets.USER_ID }} \
            --build-arg API_KEY=${{ secrets.API_KEY }} \
            -t ${{ env.DOCKER_NAME }} .
          docker run -d -e agent_name=${{ env.AGENT_2 }} \
            --name ${{ env.DOCKER_NAME }} ${{ env.DOCKER_NAME }}

      - name: AccelQ Scheduled UK Run
        uses: ravin-accelq/accelq-ci-github-actions@v1.4
        with:
          appURL: "https://saint-gobain.accelq.io/"
          userName: "${{ secrets.USER_ID }}"
          apiKey: "${{ secrets.API_KEY }}"
          tenantCode: ${{ env.TENANT_CODE }}
          jobId: ${{ env.UK_SCHEDULED_JOB_ID }}
          stepFailureThreshold: ${{ env.FAILURE_THRESHOLD }}

      - name: Cleanup
        run: docker rm -f ${{ env.DOCKER_NAME }}

  run-germany-scheduled-tests:
    if: github.event_name == 'schedule'
    needs: run-uk-scheduled-tests
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Build & Run AccelQ Agent
        run: |
          docker build -f config/Dockerfile \
            --build-arg USER_ID=${{ secrets.USER_ID }} \
            --build-arg API_KEY=${{ secrets.API_KEY }} \
            -t ${{ env.DOCKER_NAME }} .
          docker run -d -e agent_name=${{ env.AGENT_2 }} \
            --name ${{ env.DOCKER_NAME }} ${{ env.DOCKER_NAME }}

      - name: AccelQ Scheduled Germany Run
        uses: ravin-accelq/accelq-ci-github-actions@v1.4
        with:
          appURL: "https://saint-gobain.accelq.io/"
          userName: "${{ secrets.USER_ID }}"
          apiKey: "${{ secrets.API_KEY }}"
          tenantCode: ${{ env.TENANT_CODE }}
          jobId: ${{ env.GERMANY_SCHEDULED_JOB_ID }}
          stepFailureThreshold: ${{ env.FAILURE_THRESHOLD }}

      - name: Cleanup
        run: docker rm -f ${{ env.DOCKER_NAME }}
